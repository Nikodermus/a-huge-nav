@import "variables";

// Clear elements bellow
@mixin clearfix {
  &::after,
  &::before {
    content: '';
    display: table;
    line-height: 0;
  }

  &::after {
    clear: both;
  }
}

// Background
@mixin retina($file, $ext: "png", $parallax: false) {
  background-image: url("#{$file}.#{$ext}");
  background-size: cover;
  background-position: center center;

  @if $parallax {
    background-attachment: fixed;
  }

  @media (-webkit-min-device-pixel-ratio: 2), (min--moz-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 2 / 1), (min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx) {
    background-image: url("#{$file}@2x.#{$ext}");
  }
}

// Add custom styled scrollbars when possible
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, transparent, 50%)) {
  ::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  ::-webkit-scrollbar-thumb {
    background: $foreground-color;
  }

  ::-webkit-scrollbar-track {
    background: $background-color;
  }

  // For Internet Explorer
  body {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

// Set fonts based on readme instructions
@mixin font($font: $font-helvetica, $size: 16, $line-height: 21, $d-size: auto, $d-line-height: auto) {
  font-family: $font, $font-helvetica;
  font-size: rem($size);
  line-height: $line-height / $size;
  letter-spacing: rem($size * -0.087);

  @if $d-size != "auto" {
    @media (min-width: $screen-sm) {
      font-size: rem($d-size);
      line-height: $d-line-height / $d-size;
    }
  }

  @media (min-width: $screen-sm) {
    letter-spacing: rem($size * -0.05);
  }
}

// PX to EM
@function em($px, $base: $base-font-size) {
  @return $px / $base * 1em;
}

// PX to REM
@function rem($px, $base: $base-font-size) {
  @return $px / $base * 1rem;
}
